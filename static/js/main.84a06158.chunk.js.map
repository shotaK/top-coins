{"version":3,"sources":["i18n/index.js","i18n/locales/en/index.js","domains/rootReducer/index.js","domains/topCoins/constants.js","domains/topCoins/reducer.js","domains/topCoins/actionTypes.js","store/history.js","store/index.js","constants/api.js","helpers/api.js","domains/topCoins/selectors.js","domains/topCoins/actions.js","components/MarketOverview/Styled.js","helpers/numberUtils.js","components/MarketOverview/CoinRow.jsx","components/Shared/ApiResult.jsx","components/MarketOverview/MarketOverview.jsx","components/MarketOverview/index.js","pages/Home/index.js","components/LiquidityChart/CustomTooltip.jsx","components/LiquidityChart/LiquidityChart.jsx","components/LiquidityChart/index.jsx","pages/Liquidity/index.js","pages/NotFound/index.js","components/Navigation/index.js","constants/routing.js","components/Header/index.js","components/CoinLimitSelect/CoinLimitSelect.js","components/CoinLimitSelect/index.js","components/Router/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["resources","en","translation","nav","home","liquidity","coinAmount","selectLabel","default","allCoinsLabel","liquidityChart","xAxisName","yAxisName","zAxis","noResults","loading","marketOverview","rank","name","price","priceChange24h","marketCap","volume24h","i18n","use","initReactI18next","init","lng","interpolation","escapeValue","history","COINS_NUMBERS","ENDPOINTS","limit","initialState","fromJS","pending","coinsList","state","type","error","set","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","a","store","createStore","combineReducers","router","connectRouter","topCoins","Map","API_URL","process","METHODS","method","endpoint","requestBody","async","headers","data","JSON","stringify","url","axios","response","getIn","limitSelector","createStructuredSelector","topCoinsSelector","coinsListSelector","coinsListChartSelect","createSelector","coins","get","size","updatedCoins","map","coin","usd","priceRaw","percentChange24hRaw","isNumber","Big","percentChange24h","priceChange","Number","times","div","toFixed","setIn","coinsListChartSelector","getCoinsFailure","fetchCoins","dispatch","getState","api","res","getCoins","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","background","TableRow","formatAsMoney","number","precision","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","CoinRow","moneyUnits","component","scope","cmc_rank","align","ApiResult","children","t","useTranslation","length","useStyles","makeStyles","container","marginBottom","spacing","width","overflowX","table","minWidth","MarketOverview","classes","useEffect","Container","className","Paper","Table","aria-label","TableHead","TableBody","row","key","connect","toJS","Home","CustomTooltip","props","active","newPayload","value","payload","LiquidityChart","ScatterChart","Recharts","Scatter","XAxis","YAxis","ZAxis","Tooltip","height","margin","top","right","bottom","left","dataKey","unit","tick","label","range","scale","cursor","strokeDasharray","content","fill","shape","Liquidity","NotFound","primary","dark","Navigation","AppBar","position","Toolbar","Button","NavLink","activeClassName","to","isActive","match","isExact","breakpoints","down","padding","Header","formControl","CoinLimitSelect","selectCoinsLimit","FormControl","InputLabel","shrink","id","Select","onChange","event","target","displayEmpty","MenuItem","changeCoinsLimit","Router","exact","path","App","Fragment","CssBaseline","Boolean","location","hostname","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84a06158.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport en from \"./locales/en\";\n\nconst resources = {\n  en: {\n    translation: en\n  }\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"en\",\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","export default {\n  nav: {\n    home: \"Home\",\n    liquidity: \"Liquidity\"\n  },\n  coinAmount: {\n    selectLabel: \"Max number of coins:\",\n    default: \"default\",\n    allCoinsLabel: \"all\"\n  },\n  liquidityChart: {\n    xAxisName: \"Market Cap\",\n    yAxisName: \"Volume\",\n    zAxis: \"Price change\"\n  },\n  noResults: \"No results available\",\n  loading: \"Loading...\",\n  marketOverview: {\n    rank: \"Rank\",\n    name: \"Name\",\n    price: \"Price\",\n    priceChange24h: \"Price Change (24h)\",\n    marketCap: \"Market Cap\",\n    volume24h: \"Volume (24h)\"\n  }\n};\n","import { combineReducers } from \"redux-immutable\";\nimport { connectRouter } from \"connected-react-router/immutable\";\n\nimport topCoins from \"domains/topCoins/reducer\";\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    topCoins\n  });\n","export const COINS_NUMBERS_DEFAULT = -1; // -1 means API default number of coins will be fetched\nexport const COINS_NUMBERS = [10, 50];\nexport const COINS_NUMBER_ALL = 5000;\n\nexport const ENDPOINTS = {\n  listingsLatest: limit =>\n    `/cryptocurrency/listings/latest?convert=USD${\n      limit !== COINS_NUMBERS_DEFAULT ? `&limit=${limit}` : ``\n    }`\n};\n","import { fromJS } from \"immutable\";\n\nimport {\n  GET_COINS_REQUEST,\n  GET_COINS_SUCCESS,\n  GET_COINS_FAILURE,\n  SELECT_COINS_LIMIT\n} from \"./actionTypes\";\nimport { COINS_NUMBERS_DEFAULT } from \"./constants\";\n\nconst initialState = fromJS({\n  pending: false,\n  coinsList: {},\n  limit: COINS_NUMBERS_DEFAULT\n});\n\nexport default function(\n  state = initialState,\n  { type, limit, coinsList, error }\n) {\n  switch (type) {\n    case SELECT_COINS_LIMIT:\n      return state.set(\"limit\", fromJS(limit));\n    case GET_COINS_REQUEST:\n      return state.set(\"pending\", true);\n    case GET_COINS_SUCCESS:\n      return state.set(\"coinsList\", fromJS(coinsList)).set(\"pending\", false);\n    case GET_COINS_FAILURE:\n      return state.set(\"error\", fromJS(error)).set(\"pending\", false);\n    default: {\n      return state;\n    }\n  }\n}\n","export const SELECT_COINS_LIMIT = \"SELECT_COINS_LIMIT\";\n\nexport const GET_COINS_REQUEST = \"GET_COINS_REQUEST\";\nexport const GET_COINS_SUCCESS = \"GET_COINS_SUCCESS\";\nexport const GET_COINS_FAILURE = \"GET_COINS_FAILURE\";\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router/immutable\";\nimport { Map } from \"immutable\";\n\nimport rootReducer from \"domains/rootReducer\";\n\nimport history from \"./history\";\n\nconst middleware = [thunk, routerMiddleware(history)];\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  typeof window.__REDUX_DEVTOOLS_EXTENSION__ === \"undefined\"\n    ? a => a\n    : window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst store = createStore(rootReducer(history), Map(), composedEnhancers);\n\nexport default store;\n","// eslint-disable-next-line import/prefer-default-export\nexport const API_URL = `${process.env.REACT_APP_API_URL}/v1`;\nexport const CORS_URL = \"https://cors-anywhere.herokuapp.com/\";\n\nexport const METHODS = {\n  GET: \"GET\",\n  POST: \"POST\",\n  PUT: \"PUT\",\n  DELETE: \"DELETE\"\n};\n\nexport const GENERIC_API_ERROR_MSG = \"Oops! Something went wrong!\";\n","import axios from \"axios\";\n\nimport { API_URL, CORS_URL } from \"constants/api\";\n\nexport default async (method, endpoint, requestBody) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"X-CMC_PRO_API_KEY\": process.env.REACT_APP_API_KEY\n  };\n  const data = requestBody && JSON.stringify(requestBody);\n  const url = `${CORS_URL}${API_URL}${endpoint}`;\n\n  const response = await axios({\n    method,\n    url,\n    headers,\n    data\n  });\n  return response;\n};\n","import { createStructuredSelector, createSelector } from \"reselect\";\nimport Big from \"big.js\";\nimport isNumber from \"lodash.isnumber\";\n\nconst limit = state => state.getIn([\"topCoins\", \"limit\"]);\nconst topCoins = state => state.getIn([\"topCoins\"]);\nconst coinsList = state => state.getIn([\"topCoins\", \"coinsList\"]);\n\nexport const limitSelector = createStructuredSelector({\n  limit\n});\n\nexport const topCoinsSelector = createStructuredSelector({\n  topCoins\n});\n\nexport const coinsListSelector = createStructuredSelector({\n  coinsList\n});\n\nexport const coinsListChartSelect = createSelector(topCoins, coins => {\n  if (coins.get(\"coinsList\").size === 0) {\n    return coins;\n  }\n  const data = coins.getIn([\"coinsList\", \"data\"]);\n  const updatedCoins = data.map(coin => {\n    const usd = coin.getIn([\"quote\", \"USD\"]);\n    const priceRaw = usd.get(\"price\");\n    const percentChange24hRaw = usd.get(\"percent_change_24h\");\n    if (!isNumber(priceRaw) || !isNumber(percentChange24hRaw)) {\n      return coin;\n    }\n    const price = new Big(priceRaw);\n    const percentChange24h = new Big(percentChange24hRaw);\n    const priceChange = Number(\n      price\n        .times(percentChange24h)\n        .div(100)\n        .toFixed(2)\n    );\n    return coin.setIn([\"quote\", \"USD\", \"money_change_24h\"], priceChange);\n  });\n  return coins.setIn([\"coinsList\", \"data\"], updatedCoins);\n});\n\nexport const coinsListChartSelector = createStructuredSelector({\n  topCoins: coinsListChartSelect\n});\n","import get from \"lodash.get\";\n\nimport {\n  GET_COINS_REQUEST,\n  GET_COINS_SUCCESS,\n  GET_COINS_FAILURE,\n  SELECT_COINS_LIMIT\n} from \"./actionTypes\";\nimport api from \"helpers/api\";\nimport { METHODS, GENERIC_API_ERROR_MSG } from \"constants/api\";\nimport { limitSelector, coinsListSelector } from \"./selectors\";\nimport { ENDPOINTS } from \"./constants\";\n\nexport const changeCoinsLimit = limit => ({\n  type: SELECT_COINS_LIMIT,\n  limit\n});\n\nexport const getCoinsRequest = () => ({\n  type: GET_COINS_REQUEST\n});\n\nexport const getCoinsSuccess = coinsList => ({\n  type: GET_COINS_SUCCESS,\n  coinsList\n});\n\nexport const getCoinsFailure = error => ({\n  type: GET_COINS_FAILURE,\n  error\n});\n\nexport const fetchCoins = limit => async (dispatch, getState) => {\n  dispatch(getCoinsRequest());\n\n  try {\n    const res = await api(METHODS.GET, ENDPOINTS.listingsLatest(limit), \"\");\n    const data = get(res, \"data\");\n    const error = get(res, \"data.status.error_message\");\n\n    if (get(res, \"data\")) {\n      dispatch(getCoinsSuccess(data));\n    } else if (error) {\n      dispatch(getCoinsFailure({ error }));\n    } else {\n      dispatch(getCoinsFailure({ error: GENERIC_API_ERROR_MSG }));\n    }\n  } catch (error) {\n    dispatch(getCoinsFailure({ error: GENERIC_API_ERROR_MSG }));\n  }\n};\n\nexport const getCoins = () => async (dispatch, getState) => {\n  const { limit } = limitSelector(getState());\n\n  const { coinsList } = coinsListSelector(getState());\n\n  if (coinsList.size === 0) {\n    dispatch(fetchCoins(limit));\n  }\n};\n\nexport const selectCoinsLimit = limit => dispatch => {\n  dispatch(changeCoinsLimit(limit));\n  dispatch(fetchCoins(limit));\n};\n","import TableCell from \"@material-ui/core/TableCell\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nexport const StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nexport const StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n","import isNumber from \"lodash.isnumber\";\n\nexport const formatAsMoney = (number, precision = 2) => {\n  if (!isNumber(number)) {\n    return 0;\n  }\n\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: precision,\n    maximumFractionDigits: precision\n  });\n\n  return formatter.format(number);\n};\n","import React from \"react\";\nimport { shape, string, number } from \"prop-types\";\nimport get from \"lodash.get\";\nimport isNumber from \"lodash.isnumber\";\n\nimport { formatAsMoney } from \"helpers/numberUtils\";\nimport { StyledTableCell, StyledTableRow } from \"./Styled\";\n\nconst CoinRow = ({ coin }) => {\n  const moneyUnits = get(coin, \"quote.USD\", {});\n  const price = get(moneyUnits, \"price\");\n  const percentChange24h = get(moneyUnits, \"percent_change_24h\");\n  const marketCap = get(moneyUnits, \"market_cap\");\n  const volume24h = get(moneyUnits, \"volume_24h\");\n\n  return (\n    <StyledTableRow>\n      <StyledTableCell component=\"th\" scope=\"coin\">\n        {coin.cmc_rank}\n      </StyledTableCell>\n      <StyledTableCell align=\"right\">{coin.name}</StyledTableCell>\n      <StyledTableCell align=\"right\">\n        {isNumber(price) ? formatAsMoney(price) : \"-\"}\n      </StyledTableCell>\n      <StyledTableCell align=\"right\">\n        {isNumber(percentChange24h)\n          ? `${Number(percentChange24h).toFixed(2)}%`\n          : \"-\"}\n      </StyledTableCell>\n      <StyledTableCell align=\"right\">\n        {isNumber(marketCap) ? formatAsMoney(marketCap, 0) : \"-\"}\n      </StyledTableCell>\n      <StyledTableCell align=\"right\">\n        {isNumber(volume24h) ? formatAsMoney(volume24h, 0) : \"-\"}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nCoinRow.propTypes = {\n  coin: shape({\n    name: string,\n    cmc_rank: number,\n    quote: shape({\n      USD: shape({\n        price: number,\n        percent_change_24h: number,\n        market_cap: number,\n        volume_24h: number\n      })\n    })\n  }).isRequired\n};\n\nexport default CoinRow;\n","import React from \"react\";\nimport { bool, object, node } from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport get from \"lodash.get\";\n\nconst ApiResult = ({ pending, error, coinsList, children }) => {\n  const { t } = useTranslation();\n\n  if (pending) {\n    return <p>{t(\"loading\")}</p>;\n  }\n\n  if (error) {\n    return error.error;\n  }\n\n  if (get(coinsList, \"data\", []).length > 0) {\n    return children;\n  }\n\n  return <p>{t(\"noResults\")}</p>;\n};\n\nApiResult.propTypes = {\n  pending: bool,\n  error: object,\n  coinsList: object,\n  children: node.isRequired\n};\n\nexport default ApiResult;\n","import React, { useEffect } from \"react\";\nimport get from \"lodash.get\";\nimport { func, object } from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Container } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { StyledTableCell } from \"./Styled\";\nimport CoinRow from \"./CoinRow\";\nimport ApiResult from \"components/Shared/ApiResult\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginBottom: theme.spacing(3)\n  },\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n}));\n\nconst MarketOverview = ({ topCoins, getCoins }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const data = get(topCoins, \"coinsList.data\", []);\n\n  useEffect(() => {\n    getCoins();\n  }, [getCoins]);\n\n  return (\n    <Container className={classes.container}>\n      <ApiResult {...topCoins}>\n        <Paper className={classes.root}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>{t(\"marketOverview.rank\")}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {t(\"marketOverview.name\")}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {t(\"marketOverview.price\")}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {t(\"marketOverview.priceChange24h\")}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {t(\"marketOverview.marketCap\")}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {t(\"marketOverview.volume24h\")}\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(row => (\n                <CoinRow key={row.name} coin={row} />\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </ApiResult>\n    </Container>\n  );\n};\n\nMarketOverview.propTypes = {\n  getCoins: func.isRequired,\n  topCoins: object.isRequired\n};\n\nexport default MarketOverview;\n","import { connect } from \"react-redux\";\nimport toJS from \"with-immutable-props-to-js\";\n\nimport { getCoins } from \"domains/topCoins/actions\";\n\nimport MarketOverview from \"./MarketOverview\";\nimport { topCoinsSelector } from \"domains/topCoins/selectors\";\n\nexport default connect(topCoinsSelector, { getCoins })(toJS(MarketOverview));\n","import React from \"react\";\n\nimport MarketOverview from \"components/MarketOverview\";\n\nconst Home = () => <MarketOverview />;\n\nexport default Home;\n","import React from \"react\";\nimport { bool, array } from \"prop-types\";\nimport get from \"lodash.get\";\nimport DefaultTooltipContent from \"recharts/lib/component/DefaultTooltipContent\";\n\nconst CustomTooltip = props => {\n  if (!props.active) {\n    return null;\n  }\n\n  const newPayload = [\n    {\n      name: \"Name\",\n      value: get(props, \"payload[0].payload.name\")\n    },\n    ...props.payload\n  ];\n\n  return <DefaultTooltipContent {...props} payload={newPayload} />;\n};\n\nCustomTooltip.propTypes = {\n  active: bool,\n  payload: array\n};\n\nexport default CustomTooltip;\n","import React, { useEffect } from \"react\";\nimport { func, object } from \"prop-types\";\nimport * as Recharts from \"recharts\";\nimport { useTranslation } from \"react-i18next\";\nimport { Container } from \"@material-ui/core\";\n\nimport CustomTooltip from \"./CustomTooltip\";\nimport ApiResult from \"components/Shared/ApiResult\";\n\nconst LiquidityChart = ({ topCoins, getCoins }) => {\n  const { t } = useTranslation();\n  const { ScatterChart, Scatter, XAxis, YAxis, ZAxis, Tooltip } = Recharts;\n\n  useEffect(() => {\n    getCoins();\n  }, [getCoins]);\n\n  const { coinsList } = topCoins;\n\n  return (\n    <Container>\n      <ApiResult {...topCoins}>\n        <ScatterChart\n          width={1100}\n          height={500}\n          margin={{ top: 20, right: 20, bottom: 20, left: 0 }}\n        >\n          <XAxis\n            type=\"number\"\n            dataKey={\"quote.USD.market_cap\"}\n            name={t(\"liquidityChart.xAxisName\")}\n            unit=\"$\"\n            tick={false}\n            label={t(\"liquidityChart.xAxisName\")}\n          />\n          <YAxis\n            type=\"number\"\n            dataKey={\"quote.USD.volume_24h\"}\n            name={t(\"liquidityChart.xAxisName\")}\n            unit=\"$\"\n            label={t(\"liquidityChart.yAxisName\")}\n            tick={false}\n          />\n          <ZAxis\n            type=\"number\"\n            dataKey={\"quote.USD.money_change_24h\"}\n            name={t(\"liquidityChart.zAxis\")}\n            unit=\"$\"\n            range={[60, 400]}\n            scale=\"sequential\"\n            label={t(\"liquidityChart.zAxis\")}\n          />\n          <Tooltip\n            cursor={{ strokeDasharray: \"3 3\" }}\n            content={<CustomTooltip />}\n          />\n          <Scatter data={coinsList.data} fill=\"#8884d8\" shape=\"circle\" />\n        </ScatterChart>\n      </ApiResult>\n    </Container>\n  );\n};\n\nLiquidityChart.propTypes = {\n  getCoins: func.isRequired,\n  topCoins: object.isRequired\n};\n\nexport default LiquidityChart;\n","import { connect } from \"react-redux\";\nimport toJS from \"with-immutable-props-to-js\";\n\nimport { getCoins } from \"domains/topCoins/actions\";\n\nimport LiquidityChart from \"./LiquidityChart\";\nimport { coinsListChartSelector } from \"domains/topCoins/selectors\";\n\nexport default connect(coinsListChartSelector, { getCoins })(\n  toJS(LiquidityChart)\n);\n","import React from \"react\";\n\nimport LiquidityChart from \"components/LiquidityChart\";\n\nconst Liquidity = () => <LiquidityChart />;\n\nexport default Liquidity;\n","import React from \"react\";\n\nconst NotFound = () => <div>404</div>;\n\nexport default NotFound;\n","import React from \"react\";\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HOME, LIQUIDITY } from \"constants/routing\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(3)\n  },\n  active: {\n    backgroundColor: theme.palette.primary.dark\n  }\n}));\n\nconst Navigation = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <div>\n          <Button\n            component={NavLink}\n            activeClassName={classes.active}\n            to={HOME}\n            color=\"inherit\"\n            isActive={match => match.isExact}\n          >\n            {t(\"nav.home\")}\n          </Button>\n          <Button\n            component={NavLink}\n            activeClassName={classes.active}\n            to={LIQUIDITY}\n            color=\"inherit\"\n          >\n            {t(\"nav.liquidity\")}\n          </Button>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navigation;\n","export const HOME = \"/\";\nexport const LIQUIDITY = \"/liquidity\";\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Navigation from \"../Navigation\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"0\"\n    }\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.root}>\n      <Navigation />\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { func } from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useTranslation } from \"react-i18next\";\nimport Container from \"@material-ui/core/Container\";\n\nimport {\n  COINS_NUMBERS,\n  COINS_NUMBERS_DEFAULT,\n  COINS_NUMBER_ALL\n} from \"domains/topCoins/constants\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(3)\n  },\n  formControl: {\n    minWidth: 200\n  }\n}));\n\nconst CoinLimitSelect = ({ selectCoinsLimit, limit }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const handleChange = event => selectCoinsLimit(event.target.value);\n\n  return (\n    <Container className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n          {t(\"coinAmount.selectLabel\")}\n        </InputLabel>\n        <Select\n          id=\"demo-simple-select-placeholder-label\"\n          value={limit}\n          onChange={handleChange}\n          displayEmpty\n        >\n          <MenuItem value={COINS_NUMBERS_DEFAULT}>\n            <em>{t(\"coinAmount.default\")}</em>\n          </MenuItem>\n          {COINS_NUMBERS.map(coin => (\n            <MenuItem key={coin} value={coin}>\n              {coin}\n            </MenuItem>\n          ))}\n          <MenuItem value={COINS_NUMBER_ALL}>\n            {t(\"coinAmount.allCoinsLabel\")}\n          </MenuItem>\n        </Select>\n      </FormControl>\n    </Container>\n  );\n};\n\nCoinLimitSelect.propTypes = {\n  selectCoinsLimit: func.isRequired\n};\n\nexport default CoinLimitSelect;\n","import { connect } from \"react-redux\";\nimport toJS from \"with-immutable-props-to-js\";\n\nimport { selectCoinsLimit } from \"domains/topCoins/actions\";\n\nimport CoinLimitSelect from \"./CoinLimitSelect\";\nimport { limitSelector } from \"domains/topCoins/selectors\";\n\nexport default connect(limitSelector, { selectCoinsLimit })(\n  toJS(CoinLimitSelect)\n);\n","import React, { Fragment } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { HOME, LIQUIDITY } from \"constants/routing\";\n\nimport Home from \"pages/Home\";\nimport Liquidity from \"pages/Liquidity\";\nimport NotFound from \"pages/NotFound\";\nimport Header from \"components/Header\";\nimport CoinLimitSelect from \"components/CoinLimitSelect\";\n\nconst Router = () => (\n  <Fragment>\n    <Header />\n    <CoinLimitSelect />\n    <Switch>\n      <Route exact path={HOME} component={Home} />\n      <Route path={LIQUIDITY} component={Liquidity} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  </Fragment>\n);\n\nexport default Router;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Router from \"../Router\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Router />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router/immutable\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport \"i18n\";\n\nimport store from \"store\";\nimport history from \"store/history\";\n\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst theme = createMuiTheme({});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}